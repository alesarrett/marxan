% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/MarxanData.R, R/MarxanOpts.R, R/MarxanSolved.R, R/MarxanUnsolved.R, R/generics.R
\name{update.MarxanData}
\alias{update}
\alias{update.MarxanData}
\alias{update.MarxanOpts}
\alias{update.MarxanSolved}
\alias{update.MarxanUnsolved}
\title{Update Marxan Inputs}
\usage{
\method{update}{MarxanData}(x, formula, force_reset = TRUE)

\method{update}{MarxanOpts}(x, formula, force_reset = TRUE)

\method{update}{MarxanSolved}(x, formula, evaluate = TRUE,
  force_reset = TRUE)

\method{update}{MarxanUnsolved}(x, formula, evaluate = TRUE, force_reset)

update(x, formula, evaluate)
}
\arguments{
\item{x}{"MarxanOpts", "MarxanData", "MarxanUnsolved", or "MarxanSolved" object.}

\item{formula}{"formula" with update commands (see examples).}

\item{evaluate}{"logical" should solutions be generated for the new object?}
}
\value{
"MarxanSolved" or "MarxanUnsolved" object depending on solve argument.
}
\description{
This function lets you update Marxan objects to obtain a new object with altered inputs. This is particularly useful if you want to rerun a Marxan
analysis but after changing a few parameters. For example, you might decide that you need to rerun a Marxan analysis with a higher number of iterations, or with a different
boundary length modifier. In effect, this lets you take an existing "MarxanUnsolved"/"MarxanSolved" object, change specific inputs, and run a Marxan analysis using the tweaked inputs.
}
\section{Methods (by class)}{
\itemize{
\item \code{MarxanData}: 

\item \code{MarxanOpts}: 

\item \code{MarxanSolved}: 

\item \code{MarxanUnsolved}: 
}}
\seealso{
\code{link{MarxanSolved-class}}, \code{link{MarxanUnsolved-class}}, \code{link{marxan}}
}

